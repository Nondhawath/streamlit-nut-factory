# üì¶ Import Library
from datetime import datetime, timedelta
import pandas as pd
import streamlit as st
import gspread
from google.oauth2.service_account import Credentials
import requests

# ‚úÖ Telegram Settings
TELEGRAM_TOKEN = "7617656983:AAGqI7jQvEtKZw_tD11cQneH57WvYWl9r_s"
TELEGRAM_CHAT_ID = "-4944715716"

def send_telegram_message(message):
    try:
        url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
        payload = {"chat_id": TELEGRAM_CHAT_ID, "text": message, "parse_mode": "HTML"}
        requests.post(url, data=payload)
    except Exception as e:
        st.warning(f"‚ö†Ô∏è Telegram Error: {e}")

# ‚è∞ Timezone
def now_th():
    return datetime.utcnow() + timedelta(hours=7)

# üîê Google Sheet Auth
SCOPE = ['https://www.googleapis.com/auth/spreadsheets', 'https://www.googleapis.com/auth/drive']
service_account_info = st.secrets["GOOGLE_SHEETS_CREDENTIALS"]  # ‡πÄ‡∏õ‡πá‡∏ô dict ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
creds = Credentials.from_service_account_info(service_account_info, scopes=SCOPE)
client = gspread.authorize(creds)

# üìó Sheets
sheet_id = "1lYyHPN7Gdz628lw5s1JVkhNqnS5oHd5oSavUSgL_8cU"
try:
    sheet = client.open_by_key(sheet_id)
    worksheet = sheet.worksheet("Data")  # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏µ‡∏ó‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤ Data
    part_code_sheet = sheet.worksheet("part_code_master")  # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡∏µ‡∏ó‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤ part_code_master
except gspread.exceptions.APIError as e:
    st.error(f"‚ö†Ô∏è Error accessing Google Sheets: {e}")
    st.stop()

# üîÅ Load Master Data
def load_master_data():
    try:
        # Part Data (‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô)
        part_master = part_code_sheet.col_values(1)[1:]  # ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡∏ä‡∏µ‡∏ó part_code_master

        return part_master

    except Exception as e:
        st.error(f"‚ö†Ô∏è Error loading master data: {e}")
        return []

part_master = load_master_data()

# üÜî ‡∏™‡∏£‡πâ‡∏≤‡∏á Job ID ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢
def generate_job_id():
    try:
        records = worksheet.get_all_records()
    except gspread.exceptions.APIError as e:
        st.error(f"‚ö†Ô∏è API Error: {e}")
        return None

    prefix = now_th().strftime("%y%m")
    filtered = [
        r for r in records
        if isinstance(r.get("Job ID"), str) and r["Job ID"].startswith(prefix) and r["Job ID"][-4:].isdigit()
    ]
    last_seq = max([int(r["Job ID"][-4:]) for r in filtered], default=0)
    return f"{prefix}{last_seq + 1:04d}"

# üîê Login Process
if "logged_in_user" not in st.session_state:
    with st.form("login_form"):
        st.subheader("üîê ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö")
        username = st.text_input("üë§ Username")
        password = st.text_input("üîë Password", type="password")
        submitted = st.form_submit_button("üîì Login")
        if submitted:
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
            if username == "admin" and password == "admin":  # ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
                st.session_state.logged_in_user = username
                st.rerun()
            else:
                st.error("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    st.stop()

user = st.session_state.logged_in_user
st.set_page_config(page_title="‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ä‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô", layout="wide")
st.title(f"üì¶ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ä‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô - ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {user}")

# üì• ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ä‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô
st.subheader("üì¶ ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ä‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô")

with st.form("weight_form"):
    job_id = generate_job_id()
    if job_id is None:
        st.error("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á Job ID ‡πÑ‡∏î‡πâ")
        st.stop()

    st.markdown(f"**üÜî Job ID:** `{job_id}`")
    part_code = st.selectbox("üî© ‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô", part_master)
    weight = st.number_input("‚öñÔ∏è ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ä‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô (n = 32)", min_value=0.0, step=0.1)
    timestamp = now_th().strftime("%Y-%m-%d %H:%M:%S")

    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏Å‡∏î‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡∏£‡∏ö
    submit_button = st.form_submit_button("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")

    if submit_button and weight > 0:
        # ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
        data = worksheet.get_all_records()
        job_row = None
        for idx, row in enumerate(data):
            if row["‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô"] == part_code:
                job_row = idx + 2  # +2 ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÅ‡∏ñ‡∏ß‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 2 (‡πÅ‡∏ñ‡∏ß‡πÅ‡∏£‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á)
                break

        if job_row:
            # ‡∏´‡∏≤ first empty column ‡∏ó‡∏µ‡πà n1 ‡∏ñ‡∏∂‡∏á n30
            for col_idx in range(1, 31):  # n1 ‡∏ñ‡∏∂‡∏á n30
                if not worksheet.cell(job_row, col_idx + 1).value:  # ‡∏ñ‡πâ‡∏≤‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô‡πÄ‡∏ã‡∏•‡∏•‡πå‡∏ß‡πà‡∏≤‡∏á
                    worksheet.update_cell(job_row, col_idx + 1, weight)
                    st.success(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ä‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô {weight} kg ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô n{col_idx}")
                    send_telegram_message(
                        f"üì¶ <b>New Weight Record</b>\n"
                        f"üÜî Job ID: <code>{job_id}</code>\n"
                        f"üë∑‚Äç‚ôÇÔ∏è ‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô: {user}\n"
                        f"üî© ‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô: {part_code}\n"
                        f"‚öñÔ∏è ‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏ä‡∏¥‡πâ‡∏ô‡∏á‡∏≤‡∏ô: {weight} kg\n"
                        f"‚è∞ ‡πÄ‡∏ß‡∏•‡∏≤‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: {timestamp}"
                    )
                    break
            else:
                st.warning("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå n1 ‡∏ñ‡∏∂‡∏á n30 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
        else:
            st.warning("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö")
