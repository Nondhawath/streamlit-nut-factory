import streamlit as st
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î scope ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Google Sheets ‡πÅ‡∏•‡∏∞ Drive
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]

# ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå credentials.json ‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á (‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô folder ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ)
credentials = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
client = gspread.authorize(credentials)

# Google Sheets key ‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏ä‡∏µ‡∏ó
SPREADSHEET_KEY = "1op8bQkslCAtRbeW7r3XjGP82kcIv0ox1azrCS2-1fRE"
data_sheet = client.open_by_key(SPREADSHEET_KEY).worksheet("OSmanagementdata")
part_code_sheet = client.open_by_key(SPREADSHEET_KEY).worksheet("OS_part_code_master")
user_sheet = client.open_by_key(SPREADSHEET_KEY).worksheet("‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô
job_codes = part_code_sheet.col_values(1)[1:]  # ‡∏Ç‡πâ‡∏≤‡∏° header
user_data_raw = user_sheet.get_all_records()
user_dict = {str(row["‡∏£‡∏´‡∏±‡∏™"]): row["‡∏ä‡∏∑‡πà‡∏≠"] for row in user_data_raw}

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏≠‡∏õ Streamlit
st.set_page_config(page_title="FI_OS_Management", layout="centered")

if "authenticated" not in st.session_state:
    st.session_state.authenticated = False
if "username" not in st.session_state:
    st.session_state.username = ""

if not st.session_state.authenticated:
    st.header("üîí ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö")
    user_code = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", type="password")

    if st.button("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö"):
        if user_code in user_dict:
            st.session_state.authenticated = True
            st.session_state.username = user_dict[user_code]
            st.experimental_rerun()
        else:
            st.error("‚ùå ‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà")
else:
    st.success(f"‚úÖ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì {st.session_state.username}")
    st.header("üìã ‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤ / ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏á‡∏≤‡∏ô OK-NG")

    job_code = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô", job_codes)
    ok_qty = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏á‡∏≤‡∏ô OK", min_value=0, step=1)
    ng_qty = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏á‡∏≤‡∏ô NG", min_value=0, step=1)
    total_qty = ok_qty + ng_qty
    st.markdown(f"**‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_qty} ‡∏ä‡∏¥‡πâ‡∏ô**")

    remark = st.text_input("‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)")

    if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"):
        if total_qty == 0:
            st.warning("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô OK ‡∏´‡∏£‡∏∑‡∏≠ NG ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Ñ‡πà‡∏≤")
        else:
            timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            job_id = f"{job_code}-{int(datetime.now().timestamp())}"

            if ok_qty > 0:
                data_sheet.append_row([timestamp, st.session_state.username, job_code, ok_qty, "OK", remark, job_id, "‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô"])
            if ng_qty > 0:
                data_sheet.append_row([timestamp, st.session_state.username, job_code, ng_qty, "NG", remark, job_id, "‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô"])

            st.success(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß | Job ID: {job_id}")
