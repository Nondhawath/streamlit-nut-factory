import streamlit as st
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime
import json

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ credentials ‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Sheets
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
creds_dict = st.secrets["GOOGLE_SHEETS_CREDENTIALS"]
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
client = gspread.authorize(creds)

# Spreadsheet key
SPREADSHEET_KEY = "1op8bQkslCAtRbeW7r3XjGP82kcIv0ox1azrCS2-1fRE"

# ‡πÇ‡∏´‡∏•‡∏î worksheets
data_sheet = client.open_by_key(SPREADSHEET_KEY).worksheet("Data")
login_sheet = client.open_by_key(SPREADSHEET_KEY).worksheet("‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô")
part_code_sheet = client.open_by_key(SPREADSHEET_KEY).worksheet("OS_part_code_master")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö login
login_data = login_sheet.get_all_records()
users = {str(row['‡∏£‡∏´‡∏±‡∏™']): row['‡∏ä‡∏∑‡πà‡∏≠'] for row in login_data}

# ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô
job_codes = part_code_sheet.col_values(1)[1:]

# ‡∏™‡∏£‡πâ‡∏≤‡∏á session state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö login
if 'logged_in' not in st.session_state:
    st.session_state.logged_in = False
if 'username' not in st.session_state:
    st.session_state.username = ""

# --- ‡∏´‡∏ô‡πâ‡∏≤ Login ---
if not st.session_state.logged_in:
    st.title("üîí ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö")
    emp_id = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô", type="password")

    if st.button("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö"):
        if emp_id in users:
            st.session_state.logged_in = True
            st.session_state.username = users[emp_id]
            st.success(f"‚úÖ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì {users[emp_id]}")
            st.experimental_rerun()
        else:
            st.error("‚ùå ‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà")
    st.stop()

# --- ‡πÇ‡∏´‡∏°‡∏î‡∏´‡∏•‡∏±‡∏Å ---
st.title("üìã ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ OS")

mode = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏´‡∏°‡∏î", ["‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤ / ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å OK-NG", "‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏Ç‡πâ‡∏≤"])

if mode == "‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤ / ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å OK-NG":
    st.subheader("üõ† ‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà ‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏• OK/NG")

    job_code = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô", job_codes)
    quantity = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏á‡∏≤‡∏ô", min_value=1, step=1)
    result = st.radio("‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏á‡∏≤‡∏ô", ["OK", "NG"])
    remark = st.text_input("‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)")
    if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"):
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        job_id = f"{job_code}-{int(datetime.now().timestamp())}"
        new_row = [timestamp, st.session_state.username, job_code, quantity, result, remark, job_id, "‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô"]
        data_sheet.append_row(new_row)
        st.success(f"‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß | Job ID: {job_id}")

elif mode == "‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏Ç‡πâ‡∏≤":
    st.subheader("üîß ‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤")

    job_id_input = st.text_input("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà Job ID ‡∏Ç‡∏≠‡∏á‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ")

    if job_id_input:
        records = data_sheet.get_all_records()
        matched_job = None
        for row in records:
            if str(row.get("Job ID", "")).strip() == job_id_input.strip() and row.get("‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞", "") == "‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°":
                matched_job = row
                break

        if matched_job:
            st.markdown(f"""
                ‚úÖ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Job ID:
                - ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á: **{matched_job['‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ']}**
                - ‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô: **{matched_job['‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô']}**
                - ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: **{matched_job['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô']}**
                - ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: _{matched_job['‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏']}_""")

            remark = st.text_input("‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)", key="repair_remark")

            if st.button("‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤"):
                timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                new_row = [timestamp, st.session_state.username, matched_job['‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô'], matched_job['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô'], "‡∏£‡∏±‡∏ö‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏Ç‡πâ‡∏≤", remark, job_id_input, "‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡πÄ‡∏Ç‡πâ‡∏≤"]
                data_sheet.append_row(new_row)
                st.success(f"‚úÖ ‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß | Job ID: {job_id_input}")
        else:
            st.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Job ID ‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏™‡πà‡∏á‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏° ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
